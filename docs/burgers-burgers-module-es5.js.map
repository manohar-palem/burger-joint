{"version":3,"sources":["webpack:///src/app/burgers/burgers-routing.module.ts","webpack:///src/app/burgers/burgers.module.ts","webpack:///src/app/burgers/components/burger-customization/burger-customization.component.data.ts","webpack:///src/app/burgers/components/burger-customization/burger-customization.component.ts","webpack:///src/app/burgers/components/burger-customization/burger-customization.component.html","webpack:///src/app/burgers/components/burgers-wrapper/burgers-wrapper.component.ts","webpack:///src/app/burgers/components/burgers-wrapper/burgers-wrapper.component.html","webpack:///src/app/burgers/components/burgers/burgers.component.ts","webpack:///src/app/burgers/components/burgers/burgers.component.html","webpack:///src/app/burgers/components/customer-details/customer-details.component.ts","webpack:///src/app/burgers/components/customer-details/customer-details.component.html","webpack:///src/app/burgers/components/index.ts","webpack:///src/app/burgers/components/order-confirmation/order-confirmation.component.ts","webpack:///src/app/burgers/components/order-confirmation/order-confirmation.component.html","webpack:///src/app/burgers/components/order-form/order-form.component.ts","webpack:///src/app/burgers/components/order-form/order-form.component.html","webpack:///src/app/burgers/components/order-preview/order-preview.component.ts","webpack:///src/app/burgers/components/order-preview/order-preview.component.html","webpack:///src/app/burgers/services/burgers.service.ts","webpack:///src/app/shared/config/order.config.ts","webpack:///src/app/shared/data/burgers.data.ts","webpack:///src/app/shared/models/burger.model.ts","webpack:///src/app/shared/models/order.model.ts"],"names":["routes","path","component","children","redirectTo","BurgersRoutingModule","forChild","imports","exports","BurgersModule","declarations","providers","IngredientOptions","Object","entries","map","ingredintLabel","ingredinetName","ingredient","name","title","quantity","max","resettable","Bun","BurgerCustomizationComponent","priceService","ingredientOptions","quantityChanged","currentRate","ingredientPrice","ingredientOption","currentRateValue","emit","index","option","selector","templateUrl","styleUrls","BurgersWrapperComponent","BurgersComponent","burgersService","burgers","query","subscribe","burger","type","CustomerDetailsComponent","customerDetailsChanged","customerDetails","customer","onInputChange","components","OrderConfirmationComponent","OrderFormComponent","activatedRoute","orderssService","order","customizationOptions","burgerType","snapshot","params","getBurgerByType","ingredients","data","post","isOrderSubmitted","currentTab","OrderPreviewComponent","submitOrder","validateCustomerDetails","submitted","areCustomerDetailsValid","phone","Boolean","length","initiatteOrder","BurgersService","burgerId","payload","id","providedIn","ADDITIONAL_CHARGES","TAX","SERVIE_CHARGES","DISCOUNT","placehoderImg","burgerDesc","BURGERS_DESC","CheeseBurger","img","description","Cheese","CutletBurger","Cutlet","SaladBurger","Salad","ChlliBurger","Chilli","PaneerBurger","Paneer","MashroomBurger","Mashroom","VanillaBurger","desc","forEach","value","thumbnail","BURGERS","keys","Burger","CustomerDetails","Order","discount","additionalCharges","tax","serviceCharges"],"mappings":"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","file":"burgers-burgers-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BurgersComponent } from './components/burgers/burgers.component';\r\nimport { BurgersWrapperComponent } from './components/burgers-wrapper/burgers-wrapper.component';\r\nimport { OrderFormComponent } from './components/order-form/order-form.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BurgersWrapperComponent,\r\n    children: [\r\n      {\r\n        path: 'list',\r\n        component: BurgersComponent\r\n      },\r\n      {\r\n        path: ':burgerType',\r\n        component: OrderFormComponent\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: 'list'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [CommonModule, RouterModule]\r\n})\r\nexport class BurgersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbRatingModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { PipesModule } from './../shared/pipes/pipes.module';\r\nimport { BurgersRoutingModule } from './burgers-routing.module';\r\nimport { components } from './components';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...components\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PipesModule,\r\n    NgbNavModule,\r\n    NgbRatingModule,\r\n    BurgersRoutingModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class BurgersModule { }\r\n","import { Ingredients, IngredientsTitle, MinMaxIngedients } from '../../../shared/config/burger.config';\r\n\r\nexport interface IIngredientOption {\r\n  name: Ingredients;\r\n  quantity: number;\r\n  title: string;\r\n  max: number;\r\n  resettable?: boolean;\r\n}\r\n\r\nexport const IngredientOptions: IIngredientOption[] = Object.entries(Ingredients)\r\n  .map( ([ingredintLabel, ingredinetName]) => {\r\n    const ingredient = ingredinetName as Ingredients;\r\n    return {\r\n      name: ingredient,\r\n      title: IngredientsTitle[ingredient],\r\n      quantity: 0,\r\n      max: MinMaxIngedients[ingredient].max,\r\n      resettable: ingredient !== Ingredients.Bun\r\n    };\r\n  } );\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IIngredientOption } from './burger-customization.component.data';\r\nimport { PriceService } from './../../../shared/services/price.servie';\r\nimport { IBurger } from '../../../shared/models/burger.model';\r\nimport { IngredientsPrice, Ingredients } from '../../../shared/config/burger.config';\r\n\r\n\r\nexport interface IQuantityChangeEvent {\r\n  ingredient: Ingredients;\r\n  quantity: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-burger-customization',\r\n  templateUrl: './burger-customization.component.html',\r\n  styleUrls: ['./burger-customization.component.scss']\r\n})\r\nexport class BurgerCustomizationComponent implements OnInit {\r\n\r\n  @Input() public burger: IBurger;\r\n  @Input() public ingredientOptions: IIngredientOption[] = [];\r\n  @Output() public quantityChanged: EventEmitter<IQuantityChangeEvent> = new EventEmitter();\r\n  public currentRate = 5;\r\n  public ingredientPrice = IngredientsPrice;\r\n  constructor(public priceService: PriceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onRateChange(ingredientOption: IIngredientOption, currentRateValue: number) {\r\n    this.quantityChanged.emit({\r\n      ingredient: ingredientOption.name,\r\n      quantity: currentRateValue\r\n    });\r\n  }\r\n\r\n  public trackByIngredientName(index: number, option: IIngredientOption): Ingredients {\r\n    return option.name;\r\n  }\r\n\r\n}\r\n","<div class=\"burger-customization container\">\r\n  <div class=\"d-flex flex-row row justify-content-center\">\r\n      <!-- burger preview -->\r\n      <div class=\"d-flex-item col-xs-12 col-sm-6 col-md-4 burger-preview\">\r\n        <div class=\"card\">\r\n          <img src=\"{{burger.thumbnail}}\" class=\"card-img-top burger-thumbnail\" alt=\"...\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{burger.title}}</h5>\r\n            <p class=\"card-text\">{{burger.description}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"d-flex-item col-xs-12 col-sm-6 col-md-4 ingredient-customization\">\r\n        <!-- NgbRating symbol template -->\r\n        <ng-template #symbolTemplate let-fill=\"fill\">\r\n          <span class=\"star\" [class.full]=\"fill === 100\">\r\n            <span class=\"half\" [style.width.%]=\"fill\">&#10003;</span>&#10003;\r\n          </span>\r\n        </ng-template>\r\n        <!-- Burger Ingredients Customiazation -->\r\n        <h5>Customize Order</h5>\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            *ngFor=\"let ingredient of ingredientOptions; trackBy trackByIngredientName\">\r\n            {{ingredient.title}}\r\n            <span class=\"badge\">\r\n              <ngb-rating [max]=\"ingredient.max\" [resettable]=\"ingredient.resettable\" [(rate)]=\"ingredient.quantity\"\r\n                [starTemplate]=\"symbolTemplate\" (rateChange)=\"onRateChange(ingredient, $event)\">\r\n              </ngb-rating>\r\n              <span class=\"add-price\" [class.active]=\"ingredient.quantity\">\r\n                +{{ (ingredient.quantity * ingredientPrice[ingredient.name]) | currency: 'INR' }}\r\n              </span>\r\n            </span>\r\n          </li>\r\n          <li class=\"list-group-item d-flex justify-content-between align-items-center total-price-item\">\r\n            Burger Price\r\n            <span class=\"badge\">\r\n              <span class=\"total-price\">\r\n                {{ burger | burgerPrice }}\r\n              </span>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <!-- <a class=\"btn btn-link float-right\" [routerLink]=\"['/burgers']\" role=\"button\"> Next</a> -->\r\n      </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-burgers-wrapper',\r\n  templateUrl: './burgers-wrapper.component.html',\r\n  styleUrls: ['./burgers-wrapper.component.scss']\r\n})\r\nexport class BurgersWrapperComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"burgers-wrapper\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BurgersService } from './../../services/burgers.service';\r\nimport { PriceService } from './../../../shared/services/price.servie';\r\nimport { IBurger } from '../../../shared/models/burger.model';\r\n\r\n@Component({\r\n  selector: 'app-burgers',\r\n  templateUrl: './burgers.component.html',\r\n  styleUrls: ['./burgers.component.scss']\r\n})\r\nexport class BurgersComponent implements OnInit {\r\n\r\n  public burgers: IBurger[] = [];\r\n  constructor(\r\n    public burgersService: BurgersService,\r\n    public priceService: PriceService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.burgersService.query().subscribe( (burgers) => {\r\n      this.burgers = burgers;\r\n    } );\r\n  }\r\n\r\n  public trackByBurgerTypeFn(index: number, burger: IBurger) {\r\n    return burger.type;\r\n  }\r\n\r\n}\r\n","<div class=\"burgers-component container\">\r\n  <h5>Burgers List</h5>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\" *ngFor=\"let burger of burgers; trackBy: trackByBurgerTypeFn\">\r\n      <div class=\"card\">\r\n        <img src=\"{{burger.thumbnail}}\" class=\"card-img-top\" alt=\"...\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{{burger.title}}</h5>\r\n          <p class=\"card-text\">{{burger.description}}</p>\r\n          <span class=\"float-left\">{{ burger | burgerPrice }}</span>\r\n          <a [routerLink]=\"['/burgers/'+burger.type]\" class=\"card-link float-right\">Continue</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ICustomerDetails } from '../../../shared/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-customer-details',\r\n  templateUrl: './customer-details.component.html',\r\n  styleUrls: ['./customer-details.component.scss']\r\n})\r\nexport class CustomerDetailsComponent implements OnInit {\r\n\r\n  @Input() public customer: ICustomerDetails;\r\n  @Output() public customerDetailsChanged: EventEmitter<ICustomerDetails> = new EventEmitter();\r\n\r\n  public customerDetails: ICustomerDetails;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.customerDetails = {\r\n      ...this.customer\r\n    };\r\n  }\r\n\r\n  onInputChange() {\r\n    this.customerDetailsChanged.emit(this.customerDetails);\r\n  }\r\n\r\n}\r\n","<div class=\"customer-details container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-8 col-md-8 col-lg-8 customer-details-form-wrapper\">\r\n      <form class=\"form customer-details-form\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label form-label-sm\">Name</label>\r\n          <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"enter your name\" name=\"name\"\r\n            [(ngModel)]=\"customerDetails.name\" (input)=\"onInputChange()\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label form-label-sm\">Phone</label>\r\n          <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"enter mobile number\" name=\"phone\"\r\n            [(ngModel)]=\"customerDetails.phone\" (input)=\"onInputChange()\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label form-label-sm\">Email <span class=\"text-muted\">(Optional)</span></label>\r\n          <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"enter email address\" name=\"email\"\r\n            [(ngModel)]=\"customerDetails.email\" (input)=\"onInputChange()\">\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { OrderFormComponent } from './order-form/order-form.component';\r\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\r\nimport { BurgerCustomizationComponent } from './burger-customization/burger-customization.component';\r\nimport { BurgersWrapperComponent } from './burgers-wrapper/burgers-wrapper.component';\r\nimport { BurgersComponent } from './burgers/burgers.component';\r\nimport { OrderConfirmationComponent } from './order-confirmation/order-confirmation.component';\r\nimport { OrderPreviewComponent } from './order-preview/order-preview.component';\r\n\r\nexport const components = [\r\n  BurgersComponent,\r\n  BurgersWrapperComponent,\r\n  BurgerCustomizationComponent,\r\n  CustomerDetailsComponent,\r\n  OrderFormComponent,\r\n  OrderPreviewComponent,\r\n  OrderConfirmationComponent\r\n];\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IOrder } from '../../../shared/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-order-confirmation',\r\n  templateUrl: './order-confirmation.component.html',\r\n  styleUrls: ['./order-confirmation.component.scss']\r\n})\r\nexport class OrderConfirmationComponent implements OnInit {\r\n\r\n  @Input() public order: IOrder;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"order-confirmation\">\r\n  <div class=\"d-flex\">\r\n    <a class=\"btn btn-link\" [routerLink]=\"['/burgers']\" role=\"button\"> Goto Burgers </a>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"card-text row\">\r\n        <div class=\"col-xs-6 col-sm-7 col-md-7\">\r\n          <div class=\"customer-details\">\r\n            <div class=\"data-title\">Customer Details</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Name\r\n                <span class=\"badge\">\r\n                  {{order.customer.name}}\r\n                </span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Phone\r\n                <span class=\"badge\">\r\n                  {{order.customer.phone}}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"order-details\">\r\n            <div class=\"data-title\">Order Details</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Burger Name\r\n                <span class=\"badge\">\r\n                  {{order.burger.title}}\r\n                </span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Ingredients\r\n                <span class=\"badge\">\r\n                  {{order.burger.ingredients | json}}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-sm-5 col-md-5 price-details\">\r\n          <div class=\"data-title\">Price Details</div>\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Burger Price\r\n              <span class=\"badge burger-price\">\r\n                {{ order.burger | burgerPrice}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Tax\r\n              <span class=\"badge\" [class.charges]=\"order.additionalCharges.tax\">\r\n                + {{ order.additionalCharges.tax | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Service Charges\r\n              <span class=\"badge\" [class.charges]=\"order.additionalCharges.tax\">\r\n                + {{ order.additionalCharges.serviceCharges | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Discount\r\n              <span class=\"badge\" [class.discount]=\"order.discount\">\r\n                - {{ order.discount | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center total-price-item\">\r\n              Total\r\n              <span class=\"badge total-price\">\r\n                {{ order | orderPrice}}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"succes-wrapper\">\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n          <h5 class=\"display-8\">Your order is confirmed!</h5>\r\n          <p>Order ID: JR445</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { BurgersService } from './../../services/burgers.service';\r\nimport { IOrder, Order, ICustomerDetails } from '../../../shared/models/order.model';\r\nimport { PriceService } from './../../../shared/services/price.servie';\r\nimport { IQuantityChangeEvent } from './../burger-customization/burger-customization.component';\r\nimport { IIngredientOption, IngredientOptions } from './../burger-customization/burger-customization.component.data';\r\nimport { OrderssService } from '../../../shared/services/orders.servie';\r\n\r\n@Component({\r\n  selector: 'app-order-form',\r\n  templateUrl: './order-form.component.html',\r\n  styleUrls: ['./order-form.component.scss']\r\n})\r\nexport class OrderFormComponent implements OnInit {\r\n\r\n  public order: IOrder = new Order();\r\n  public isOrderSubmitted: boolean;\r\n  public currentTab: number;\r\n  public customizationOptions: IIngredientOption[] = [];\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private burgersService: BurgersService,\r\n    public priceService: PriceService,\r\n    public orderssService: OrderssService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const burgerType = this.activatedRoute.snapshot.params.burgerType;\r\n\r\n    /* TODO:: if the burgerType is not valid, should redirect to burgers list or show message in view */\r\n    this.order.burger =  this.burgersService.getBurgerByType(burgerType);\r\n    this.customizationOptions = IngredientOptions.map((option) => ({\r\n      ...option,\r\n      quantity: this.order.burger.ingredients[option.name] || 0\r\n    }));\r\n\r\n  }\r\n\r\n  public onQuantityChanged(data: IQuantityChangeEvent) {\r\n    this.order.burger.ingredients[data.ingredient] = data.quantity;\r\n    this.order.burger = {\r\n      ...this.order.burger\r\n    };\r\n  }\r\n\r\n  public onCustomerDetailsChanged(customerDetails: ICustomerDetails) {\r\n    this.order.customer = customerDetails;\r\n  }\r\n\r\n  public onSubmitOrder() {\r\n    this.orderssService.post(this.order).subscribe( (order) => {\r\n      this.isOrderSubmitted = true;\r\n    } );\r\n  }\r\n\r\n  public prev() {\r\n    this.currentTab = this.currentTab - 1;\r\n  }\r\n\r\n  public next() {\r\n    this.currentTab = this.currentTab + 1;\r\n  }\r\n\r\n}\r\n","<div class=\"order-form container\">\r\n\r\n  <ng-container *ngIf=\"isOrderSubmitted; then confirmationTemplate; else orderFormTemplate\"></ng-container>\r\n\r\n  <ng-template #confirmationTemplate>\r\n    <app-order-confirmation [order]=\"order\"></app-order-confirmation>\r\n  </ng-template>\r\n\r\n  <ng-template #orderFormTemplate>\r\n    <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"currentTab\" class=\"nav nav-tabs justify-content-center\">\r\n      <li [ngbNavItem]=\"1\">\r\n        <a ngbNavLink>Customize Burger</a>\r\n        <ng-template ngbNavContent>\r\n          <app-burger-customization\r\n            [ingredientOptions]=\"customizationOptions\"\r\n            (quantityChanged)=\"onQuantityChanged($event)\"\r\n            [burger]=\"order.burger\">\r\n          </app-burger-customization>\r\n        </ng-template>\r\n      </li>\r\n      <li [ngbNavItem]=\"2\">\r\n        <a ngbNavLink>Customer Details</a>\r\n        <ng-template ngbNavContent>\r\n          <app-customer-details\r\n            [customer]=\"order.customer\"\r\n            (customerDetailsChanged)=\"onCustomerDetailsChanged($event)\">\r\n          </app-customer-details>\r\n        </ng-template>\r\n      </li>\r\n      <li [ngbNavItem]=\"3\">\r\n        <a ngbNavLink>Order Preview</a>\r\n        <ng-template ngbNavContent>\r\n          <app-order-preview\r\n            [order]=\"order\"\r\n            (submitOrder)=\"onSubmitOrder()\">\r\n          </app-order-preview>\r\n        </ng-template>\r\n      </li>\r\n    </ul>\r\n    <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n\r\n\r\n    <div class=\"d-flex justify-content-around\">\r\n      <a class=\"btn btn-link\" [routerLink]=\"['/burgers']\" role=\"button\" [hidden]=\"currentTab!==1\"> Back</a>\r\n      <button class=\"btn btn-link\" role=\"button\" (click)=\"prev()\" [hidden]=\"currentTab===1\"> Back</button>\r\n      <button class=\"btn btn-link\" role=\"button\" (click)=\"next()\" [hidden]=\"currentTab===3\"> Next</button>\r\n      <span [hidden]=\"currentTab!==3\"></span>\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IOrder } from '../../../shared/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-order-preview',\r\n  templateUrl: './order-preview.component.html',\r\n  styleUrls: ['./order-preview.component.scss']\r\n})\r\nexport class OrderPreviewComponent implements OnInit {\r\n\r\n  @Input() public order: IOrder;\r\n  @Output() public submitOrder: EventEmitter<any> = new EventEmitter();\r\n  public brugerPrice: number;\r\n  public totalOrderPrice: number;\r\n  public areCustomerDetailsValid: boolean;\r\n  public submitted: boolean;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.validateCustomerDetails();\r\n  }\r\n\r\n  public initiatteOrder() {\r\n    this.submitted = true;\r\n    if (this.areCustomerDetailsValid) {\r\n      this.submitOrder.emit();\r\n    }\r\n  }\r\n\r\n  private validateCustomerDetails() {\r\n    const { name, phone } = this.order.customer;\r\n    this.areCustomerDetailsValid = Boolean(name && phone && phone.length === 10);\r\n  }\r\n\r\n}\r\n","<div class=\"order-preview\">\r\n\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"card-text row\">\r\n        <div class=\"col-xs-6 col-sm-7 col-md-7\">\r\n          <div class=\"customer-details\">\r\n            <div class=\"data-title\">Customer Details</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Name\r\n                <span class=\"badge\">\r\n                  {{order.customer.name}}\r\n                </span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Phone\r\n                <span class=\"badge\">\r\n                  {{order.customer.phone}}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"order-details\">\r\n            <div class=\"data-title\">Order Details</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Burger Name\r\n                <span class=\"badge\">\r\n                  {{order.burger.title}}\r\n                </span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Ingredients\r\n                <span class=\"badge\">\r\n                  {{order.burger | ingredients }}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-sm-5 col-md-5 price-details\">\r\n          <div class=\"data-title\">Price Details</div>\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Burger Price\r\n              <span class=\"badge burger-price\">\r\n                {{ order.burger | burgerPrice}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Tax\r\n              <span class=\"badge\" [class.charges]=\"order.additionalCharges.tax\">\r\n                + {{ order.additionalCharges.tax | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Service Charges\r\n              <span class=\"badge\" [class.charges]=\"order.additionalCharges.tax\">\r\n                + {{ order.additionalCharges.serviceCharges | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Discount\r\n              <span class=\"badge\" [class.discount]=\"order.discount\">\r\n                - {{ order.discount | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center total-price-item\">\r\n              Total\r\n              <span class=\"badge total-price\">\r\n                {{ order | orderPrice}}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row order-btn-wrapper\">\r\n        <div class=\"col col-sm-6\">\r\n          <button class=\"btn btn-primary btn-block\" (click)=\"initiatteOrder()\"> Order </button>\r\n          <p class=\"text-danger\" *ngIf=\"submitted && !areCustomerDetailsValid\">Fill customer details</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { of, Observable } from 'rxjs';\r\nimport { BURGERS, getBurgerByType } from '../../shared/data/burgers.data';\r\nimport { IBurger } from '../../shared/models/burger.model';\r\nimport { BurgerType } from '../../shared/config/burger.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BurgersService {\r\n\r\n  // query list of burgers\r\n  public query(): Observable<IBurger[]> {\r\n    // should make an API call\r\n\r\n    return of(BURGERS);\r\n\r\n  }\r\n\r\n  // get a burger by id\r\n  public get(burgerId: string) {\r\n\r\n  }\r\n\r\n  // save burger details\r\n  public post(payload: any) {\r\n\r\n  }\r\n\r\n  // update burger details\r\n  public put(id: string, payload: any) {\r\n\r\n  }\r\n\r\n  // delete burger details\r\n  public delete(id: string) {\r\n\r\n  }\r\n\r\n  public getBurgerByType(burgerType: BurgerType): IBurger {\r\n    return getBurgerByType(burgerType);\r\n  }\r\n\r\n\r\n}\r\n","export const ADDITIONAL_CHARGES = {\r\n  TAX: 2,\r\n  SERVIE_CHARGES: 1\r\n};\r\n\r\nexport const DISCOUNT = 1.5;\r\n","import { IBurger, Burger } from '../models/burger.model';\r\nimport { BurgerType, Ingredients, BurgerTitle } from '../config/burger.config';\r\nconst placehoderImg = 'assets/images/burger-placeholder.xs.png';\r\nconst burgerDesc = 'It’s seasoned with just a pinch of salt and pepper, sizzled on a flat iron grill, then topped with slivered onions, tangy pickles and two slices of melty cheese on a sesame seed bun.'\r\n\r\ninterface IBurgerDesc {\r\n  img: string;\r\n  description: string;\r\n  ingredients: {\r\n    [ingredientName: string]: number;\r\n  };\r\n}\r\n\r\nconst BURGERS_DESC: { [burgerType: string]: IBurgerDesc } = {\r\n  [BurgerType.CheeseBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Cheese]: 1\r\n    }\r\n  },\r\n  [BurgerType.CutletBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Cutlet]: 1\r\n    }\r\n  },\r\n  [BurgerType.SaladBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Salad]: 1\r\n    }\r\n  },\r\n  [BurgerType.ChlliBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Chilli]: 1\r\n    }\r\n  },\r\n  [BurgerType.PaneerBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Paneer]: 1\r\n    }\r\n  },\r\n  [BurgerType.MashroomBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Mashroom]: 1\r\n    }\r\n  },\r\n  [BurgerType.VanillaBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc ,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1\r\n    }\r\n  }\r\n};\r\n\r\nexport function getBurgerByType(type: BurgerType): IBurger {\r\n  const burger = new Burger();\r\n  const desc: IBurgerDesc = BURGERS_DESC[type];\r\n  Object.entries(desc.ingredients).forEach( ([name, value]) => {\r\n    burger.ingredients[name] = value;\r\n  } );\r\n  burger.type = type;\r\n  burger.title = BurgerTitle[type];\r\n  burger.description = desc.description;\r\n  burger.thumbnail = placehoderImg;\r\n  return burger;\r\n};\r\n\r\nexport const BURGERS: IBurger[] = Object.keys(BURGERS_DESC).map( (type) => {\r\n  return getBurgerByType(type as BurgerType);\r\n} );\r\n","import { Ingredients, BurgerType } from '../config/burger.config';\r\n\r\nexport interface IBurger {\r\n  name: string;\r\n  type: BurgerType;\r\n  ingredients: {\r\n    [Ingredients.Bun]: number;\r\n    [Ingredients.Salad]?: number;\r\n    [Ingredients.Cutlet]?: number;\r\n    [Ingredients.Cheese]?: number;\r\n    [Ingredients.Chilli]?: number;\r\n    [Ingredients.Paneer]?: number;\r\n    [Ingredients.Mashroom]?: number;\r\n  };\r\n  title?: string;\r\n  thumbnail?: string;\r\n  description?: string;\r\n}\r\n\r\nexport class Burger implements IBurger {\r\n  name = '';\r\n  type = BurgerType.CheeseBurger;\r\n  ingredients = { [Ingredients.Bun]: 1 };\r\n  title = '';\r\n  thumbnail = '';\r\n  description = '';\r\n}\r\n","import { IBurger, Burger } from './burger.model';\r\nimport { ADDITIONAL_CHARGES, DISCOUNT } from '../config/order.config';\r\n\r\nexport interface ICustomerDetails {\r\n  name: string;\r\n  phone: string;\r\n  email?: string;\r\n}\r\n\r\nexport class CustomerDetails implements ICustomerDetails {\r\n  name = '';\r\n  phone = '';\r\n}\r\n\r\nexport interface IAdditionalCharges {\r\n  tax?: number;\r\n  serviceCharges?: number;\r\n}\r\n\r\nexport interface IOrder {\r\n  burger: IBurger;\r\n  customer: ICustomerDetails;\r\n  id?: string;\r\n  time?: Date;\r\n  discount?: number;\r\n  additionalCharges?: IAdditionalCharges;\r\n}\r\n\r\nexport class Order implements IOrder {\r\n  burger = new Burger();\r\n  customer = new CustomerDetails();\r\n  discount = DISCOUNT;\r\n  additionalCharges = {\r\n    tax: ADDITIONAL_CHARGES.TAX,\r\n    serviceCharges: ADDITIONAL_CHARGES.SERVIE_CHARGES\r\n  };\r\n}\r\n"]}