{"version":3,"sources":["./src/app/burgers/burgers-routing.module.ts","./src/app/burgers/burgers.module.ts","./src/app/burgers/components/burger-customization/burger-customization.component.data.ts","./src/app/burgers/components/burger-customization/burger-customization.component.ts","./src/app/burgers/components/burger-customization/burger-customization.component.html","./src/app/burgers/components/burgers-wrapper/burgers-wrapper.component.ts","./src/app/burgers/components/burgers-wrapper/burgers-wrapper.component.html","./src/app/burgers/components/burgers/burgers.component.ts","./src/app/burgers/components/burgers/burgers.component.html","./src/app/burgers/components/customer-details/customer-details.component.ts","./src/app/burgers/components/customer-details/customer-details.component.html","./src/app/burgers/components/index.ts","./src/app/burgers/components/order-confirmation/order-confirmation.component.ts","./src/app/burgers/components/order-confirmation/order-confirmation.component.html","./src/app/burgers/components/order-form/order-form.component.ts","./src/app/burgers/components/order-form/order-form.component.html","./src/app/burgers/components/order-preview/order-preview.component.ts","./src/app/burgers/components/order-preview/order-preview.component.html","./src/app/burgers/services/burgers.service.ts","./src/app/shared/config/order.config.ts","./src/app/shared/data/burgers.data.ts","./src/app/shared/models/burger.model.ts","./src/app/shared/models/order.model.ts"],"names":[],"mappings":"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","file":"burgers-burgers-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BurgersComponent } from './components/burgers/burgers.component';\r\nimport { BurgersWrapperComponent } from './components/burgers-wrapper/burgers-wrapper.component';\r\nimport { OrderFormComponent } from './components/order-form/order-form.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BurgersWrapperComponent,\r\n    children: [\r\n      {\r\n        path: 'list',\r\n        component: BurgersComponent\r\n      },\r\n      {\r\n        path: ':burgerType',\r\n        component: OrderFormComponent\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: 'list'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [CommonModule, RouterModule]\r\n})\r\nexport class BurgersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbRatingModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { PipesModule } from './../shared/pipes/pipes.module';\r\nimport { BurgersRoutingModule } from './burgers-routing.module';\r\nimport { components } from './components';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...components\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PipesModule,\r\n    NgbNavModule,\r\n    NgbRatingModule,\r\n    BurgersRoutingModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class BurgersModule { }\r\n","import { Ingredients, IngredientsTitle, MinMaxIngedients } from '../../../shared/config/burger.config';\r\n\r\nexport interface IIngredientOption {\r\n  name: Ingredients;\r\n  quantity: number;\r\n  title: string;\r\n  max: number;\r\n  resettable?: boolean;\r\n}\r\n\r\nexport const IngredientOptions: IIngredientOption[] = Object.entries(Ingredients)\r\n  .map( ([ingredintLabel, ingredinetName]) => {\r\n    const ingredient = ingredinetName as Ingredients;\r\n    return {\r\n      name: ingredient,\r\n      title: IngredientsTitle[ingredient],\r\n      quantity: 0,\r\n      max: MinMaxIngedients[ingredient].max,\r\n      resettable: ingredient !== Ingredients.Bun\r\n    };\r\n  } );\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IIngredientOption } from './burger-customization.component.data';\r\nimport { PriceService } from './../../../shared/services/price.servie';\r\nimport { IBurger } from '../../../shared/models/burger.model';\r\nimport { IngredientsPrice, Ingredients } from '../../../shared/config/burger.config';\r\n\r\n\r\nexport interface IQuantityChangeEvent {\r\n  ingredient: Ingredients;\r\n  quantity: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-burger-customization',\r\n  templateUrl: './burger-customization.component.html',\r\n  styleUrls: ['./burger-customization.component.scss']\r\n})\r\nexport class BurgerCustomizationComponent implements OnInit {\r\n\r\n  @Input() public burger: IBurger;\r\n  @Input() public ingredientOptions: IIngredientOption[] = [];\r\n  @Output() public quantityChanged: EventEmitter<IQuantityChangeEvent> = new EventEmitter();\r\n  public currentRate = 5;\r\n  public ingredientPrice = IngredientsPrice;\r\n  constructor(public priceService: PriceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onRateChange(ingredientOption: IIngredientOption, currentRateValue: number) {\r\n    this.quantityChanged.emit({\r\n      ingredient: ingredientOption.name,\r\n      quantity: currentRateValue\r\n    });\r\n  }\r\n\r\n  public trackByIngredientName(index: number, option: IIngredientOption): Ingredients {\r\n    return option.name;\r\n  }\r\n\r\n}\r\n","<div class=\"burger-customization container\">\r\n  <div class=\"d-flex flex-row row justify-content-center\">\r\n      <!-- burger preview -->\r\n      <div class=\"d-flex-item col-xs-12 col-sm-6 col-md-4 burger-preview\">\r\n        <div class=\"card\">\r\n          <img src=\"{{burger.thumbnail}}\" class=\"card-img-top burger-thumbnail\" alt=\"...\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{burger.title}}</h5>\r\n            <p class=\"card-text\">{{burger.description}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"d-flex-item col-xs-12 col-sm-6 col-md-4 ingredient-customization\">\r\n        <!-- NgbRating symbol template -->\r\n        <ng-template #symbolTemplate let-fill=\"fill\">\r\n          <span class=\"star\" [class.full]=\"fill === 100\">\r\n            <span class=\"half\" [style.width.%]=\"fill\">&#10003;</span>&#10003;\r\n          </span>\r\n        </ng-template>\r\n        <!-- Burger Ingredients Customiazation -->\r\n        <h5>Customize Order</h5>\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            *ngFor=\"let ingredient of ingredientOptions; trackBy trackByIngredientName\">\r\n            {{ingredient.title}}\r\n            <span class=\"badge\">\r\n              <ngb-rating [max]=\"ingredient.max\" [resettable]=\"ingredient.resettable\" [(rate)]=\"ingredient.quantity\"\r\n                [starTemplate]=\"symbolTemplate\" (rateChange)=\"onRateChange(ingredient, $event)\">\r\n              </ngb-rating>\r\n              <span class=\"add-price\" [class.active]=\"ingredient.quantity\">\r\n                +{{ (ingredient.quantity * ingredientPrice[ingredient.name]) | currency: 'INR' }}\r\n              </span>\r\n            </span>\r\n          </li>\r\n          <li class=\"list-group-item d-flex justify-content-between align-items-center total-price-item\">\r\n            Burger Price\r\n            <span class=\"badge\">\r\n              <span class=\"total-price\">\r\n                {{ burger | burgerPrice }}\r\n              </span>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <!-- <a class=\"btn btn-link float-right\" [routerLink]=\"['/burgers']\" role=\"button\"> Next</a> -->\r\n      </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-burgers-wrapper',\r\n  templateUrl: './burgers-wrapper.component.html',\r\n  styleUrls: ['./burgers-wrapper.component.scss']\r\n})\r\nexport class BurgersWrapperComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"burgers-wrapper\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BurgersService } from './../../services/burgers.service';\r\nimport { PriceService } from './../../../shared/services/price.servie';\r\nimport { IBurger } from '../../../shared/models/burger.model';\r\n\r\n@Component({\r\n  selector: 'app-burgers',\r\n  templateUrl: './burgers.component.html',\r\n  styleUrls: ['./burgers.component.scss']\r\n})\r\nexport class BurgersComponent implements OnInit {\r\n\r\n  public burgers: IBurger[] = [];\r\n  constructor(\r\n    public burgersService: BurgersService,\r\n    public priceService: PriceService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.burgersService.query().subscribe( (burgers) => {\r\n      this.burgers = burgers;\r\n    } );\r\n  }\r\n\r\n  public trackByBurgerTypeFn(index: number, burger: IBurger) {\r\n    return burger.type;\r\n  }\r\n\r\n}\r\n","<div class=\"burgers-component container\">\r\n  <h5>Burgers List</h5>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\" *ngFor=\"let burger of burgers; trackBy: trackByBurgerTypeFn\">\r\n      <div class=\"card\">\r\n        <img src=\"{{burger.thumbnail}}\" class=\"card-img-top\" alt=\"...\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{{burger.title}}</h5>\r\n          <p class=\"card-text\">{{burger.description}}</p>\r\n          <span class=\"float-left\">{{ burger | burgerPrice }}</span>\r\n          <a [routerLink]=\"['/burgers/'+burger.type]\" class=\"card-link float-right\">Continue</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ICustomerDetails } from '../../../shared/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-customer-details',\r\n  templateUrl: './customer-details.component.html',\r\n  styleUrls: ['./customer-details.component.scss']\r\n})\r\nexport class CustomerDetailsComponent implements OnInit {\r\n\r\n  @Input() public customer: ICustomerDetails;\r\n  @Output() public customerDetailsChanged: EventEmitter<ICustomerDetails> = new EventEmitter();\r\n\r\n  public customerDetails: ICustomerDetails;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.customerDetails = {\r\n      ...this.customer\r\n    };\r\n  }\r\n\r\n  onInputChange() {\r\n    this.customerDetailsChanged.emit(this.customerDetails);\r\n  }\r\n\r\n}\r\n","<div class=\"customer-details container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-8 col-md-8 col-lg-8 customer-details-form-wrapper\">\r\n      <form class=\"form customer-details-form\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label form-label-sm\">Name</label>\r\n          <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"enter your name\" name=\"name\"\r\n            [(ngModel)]=\"customerDetails.name\" (input)=\"onInputChange()\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label form-label-sm\">Phone</label>\r\n          <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"enter mobile number\" name=\"phone\"\r\n            [(ngModel)]=\"customerDetails.phone\" (input)=\"onInputChange()\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label form-label-sm\">Email <span class=\"text-muted\">(Optional)</span></label>\r\n          <input type=\"text\" class=\"form-control form-control-sm\" placeholder=\"enter email address\" name=\"email\"\r\n            [(ngModel)]=\"customerDetails.email\" (input)=\"onInputChange()\">\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { OrderFormComponent } from './order-form/order-form.component';\r\nimport { CustomerDetailsComponent } from './customer-details/customer-details.component';\r\nimport { BurgerCustomizationComponent } from './burger-customization/burger-customization.component';\r\nimport { BurgersWrapperComponent } from './burgers-wrapper/burgers-wrapper.component';\r\nimport { BurgersComponent } from './burgers/burgers.component';\r\nimport { OrderConfirmationComponent } from './order-confirmation/order-confirmation.component';\r\nimport { OrderPreviewComponent } from './order-preview/order-preview.component';\r\n\r\nexport const components = [\r\n  BurgersComponent,\r\n  BurgersWrapperComponent,\r\n  BurgerCustomizationComponent,\r\n  CustomerDetailsComponent,\r\n  OrderFormComponent,\r\n  OrderPreviewComponent,\r\n  OrderConfirmationComponent\r\n];\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IOrder } from '../../../shared/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-order-confirmation',\r\n  templateUrl: './order-confirmation.component.html',\r\n  styleUrls: ['./order-confirmation.component.scss']\r\n})\r\nexport class OrderConfirmationComponent implements OnInit {\r\n\r\n  @Input() public order: IOrder;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"order-confirmation\">\r\n  <div class=\"d-flex\">\r\n    <a class=\"btn btn-link\" [routerLink]=\"['/burgers']\" role=\"button\"> Goto Burgers </a>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"card-text row\">\r\n        <div class=\"col-xs-6 col-sm-7 col-md-7\">\r\n          <div class=\"customer-details\">\r\n            <div class=\"data-title\">Customer Details</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Name\r\n                <span class=\"badge\">\r\n                  {{order.customer.name}}\r\n                </span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Phone\r\n                <span class=\"badge\">\r\n                  {{order.customer.phone}}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"order-details\">\r\n            <div class=\"data-title\">Order Details</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Burger Name\r\n                <span class=\"badge\">\r\n                  {{order.burger.title}}\r\n                </span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Ingredients\r\n                <span class=\"badge\">\r\n                  {{order.burger.ingredients | json}}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-sm-5 col-md-5 price-details\">\r\n          <div class=\"data-title\">Price Details</div>\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Burger Price\r\n              <span class=\"badge burger-price\">\r\n                {{ order.burger | burgerPrice}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Tax\r\n              <span class=\"badge\" [class.charges]=\"order.additionalCharges.tax\">\r\n                + {{ order.additionalCharges.tax | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Service Charges\r\n              <span class=\"badge\" [class.charges]=\"order.additionalCharges.tax\">\r\n                + {{ order.additionalCharges.serviceCharges | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Discount\r\n              <span class=\"badge\" [class.discount]=\"order.discount\">\r\n                - {{ order.discount | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center total-price-item\">\r\n              Total\r\n              <span class=\"badge total-price\">\r\n                {{ order | orderPrice}}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"succes-wrapper\">\r\n        <div class=\"alert alert-success\" role=\"alert\">\r\n          <h5 class=\"display-8\">Your order is confirmed!</h5>\r\n          <p>Order ID: JR445</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { BurgersService } from './../../services/burgers.service';\r\nimport { IOrder, Order, ICustomerDetails } from '../../../shared/models/order.model';\r\nimport { PriceService } from './../../../shared/services/price.servie';\r\nimport { IQuantityChangeEvent } from './../burger-customization/burger-customization.component';\r\nimport { IIngredientOption, IngredientOptions } from './../burger-customization/burger-customization.component.data';\r\nimport { OrderssService } from '../../../shared/services/orders.servie';\r\n\r\n@Component({\r\n  selector: 'app-order-form',\r\n  templateUrl: './order-form.component.html',\r\n  styleUrls: ['./order-form.component.scss']\r\n})\r\nexport class OrderFormComponent implements OnInit {\r\n\r\n  public order: IOrder = new Order();\r\n  public isOrderSubmitted: boolean;\r\n  public currentTab: number;\r\n  public customizationOptions: IIngredientOption[] = [];\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private burgersService: BurgersService,\r\n    public priceService: PriceService,\r\n    public orderssService: OrderssService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const burgerType = this.activatedRoute.snapshot.params.burgerType;\r\n\r\n    /* TODO:: if the burgerType is not valid, should redirect to burgers list or show message in view */\r\n    this.order.burger =  this.burgersService.getBurgerByType(burgerType);\r\n    this.customizationOptions = IngredientOptions.map((option) => ({\r\n      ...option,\r\n      quantity: this.order.burger.ingredients[option.name] || 0\r\n    }));\r\n\r\n  }\r\n\r\n  public onQuantityChanged(data: IQuantityChangeEvent) {\r\n    this.order.burger.ingredients[data.ingredient] = data.quantity;\r\n    this.order.burger = {\r\n      ...this.order.burger\r\n    };\r\n  }\r\n\r\n  public onCustomerDetailsChanged(customerDetails: ICustomerDetails) {\r\n    this.order.customer = customerDetails;\r\n  }\r\n\r\n  public onSubmitOrder() {\r\n    this.orderssService.post(this.order).subscribe( (order) => {\r\n      this.isOrderSubmitted = true;\r\n    } );\r\n  }\r\n\r\n  public prev() {\r\n    this.currentTab = this.currentTab - 1;\r\n  }\r\n\r\n  public next() {\r\n    this.currentTab = this.currentTab + 1;\r\n  }\r\n\r\n}\r\n","<div class=\"order-form container\">\r\n\r\n  <ng-container *ngIf=\"isOrderSubmitted; then confirmationTemplate; else orderFormTemplate\"></ng-container>\r\n\r\n  <ng-template #confirmationTemplate>\r\n    <app-order-confirmation [order]=\"order\"></app-order-confirmation>\r\n  </ng-template>\r\n\r\n  <ng-template #orderFormTemplate>\r\n    <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"currentTab\" class=\"nav nav-tabs justify-content-center\">\r\n      <li [ngbNavItem]=\"1\">\r\n        <a ngbNavLink>Customize Burger</a>\r\n        <ng-template ngbNavContent>\r\n          <app-burger-customization\r\n            [ingredientOptions]=\"customizationOptions\"\r\n            (quantityChanged)=\"onQuantityChanged($event)\"\r\n            [burger]=\"order.burger\">\r\n          </app-burger-customization>\r\n        </ng-template>\r\n      </li>\r\n      <li [ngbNavItem]=\"2\">\r\n        <a ngbNavLink>Customer Details</a>\r\n        <ng-template ngbNavContent>\r\n          <app-customer-details\r\n            [customer]=\"order.customer\"\r\n            (customerDetailsChanged)=\"onCustomerDetailsChanged($event)\">\r\n          </app-customer-details>\r\n        </ng-template>\r\n      </li>\r\n      <li [ngbNavItem]=\"3\">\r\n        <a ngbNavLink>Order Preview</a>\r\n        <ng-template ngbNavContent>\r\n          <app-order-preview\r\n            [order]=\"order\"\r\n            (submitOrder)=\"onSubmitOrder()\">\r\n          </app-order-preview>\r\n        </ng-template>\r\n      </li>\r\n    </ul>\r\n    <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n\r\n\r\n    <div class=\"d-flex justify-content-around\">\r\n      <a class=\"btn btn-link\" [routerLink]=\"['/burgers']\" role=\"button\" [hidden]=\"currentTab!==1\"> Back</a>\r\n      <button class=\"btn btn-link\" role=\"button\" (click)=\"prev()\" [hidden]=\"currentTab===1\"> Back</button>\r\n      <button class=\"btn btn-link\" role=\"button\" (click)=\"next()\" [hidden]=\"currentTab===3\"> Next</button>\r\n      <span [hidden]=\"currentTab!==3\"></span>\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IOrder } from '../../../shared/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-order-preview',\r\n  templateUrl: './order-preview.component.html',\r\n  styleUrls: ['./order-preview.component.scss']\r\n})\r\nexport class OrderPreviewComponent implements OnInit {\r\n\r\n  @Input() public order: IOrder;\r\n  @Output() public submitOrder: EventEmitter<any> = new EventEmitter();\r\n  public brugerPrice: number;\r\n  public totalOrderPrice: number;\r\n  public areCustomerDetailsValid: boolean;\r\n  public submitted: boolean;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.validateCustomerDetails();\r\n  }\r\n\r\n  public initiatteOrder() {\r\n    this.submitted = true;\r\n    if (this.areCustomerDetailsValid) {\r\n      this.submitOrder.emit();\r\n    }\r\n  }\r\n\r\n  private validateCustomerDetails() {\r\n    const { name, phone } = this.order.customer;\r\n    this.areCustomerDetailsValid = Boolean(name && phone && phone.length === 10);\r\n  }\r\n\r\n}\r\n","<div class=\"order-preview\">\r\n\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"card-text row\">\r\n        <div class=\"col-xs-6 col-sm-7 col-md-7\">\r\n          <div class=\"customer-details\">\r\n            <div class=\"data-title\">Customer Details</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Name\r\n                <span class=\"badge\">\r\n                  {{order.customer.name}}\r\n                </span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Phone\r\n                <span class=\"badge\">\r\n                  {{order.customer.phone}}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"order-details\">\r\n            <div class=\"data-title\">Order Details</div>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Burger Name\r\n                <span class=\"badge\">\r\n                  {{order.burger.title}}\r\n                </span>\r\n              </li>\r\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Ingredients\r\n                <span class=\"badge\">\r\n                  {{order.burger | ingredients }}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-6 col-sm-5 col-md-5 price-details\">\r\n          <div class=\"data-title\">Price Details</div>\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Burger Price\r\n              <span class=\"badge burger-price\">\r\n                {{ order.burger | burgerPrice}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Tax\r\n              <span class=\"badge\" [class.charges]=\"order.additionalCharges.tax\">\r\n                + {{ order.additionalCharges.tax | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Service Charges\r\n              <span class=\"badge\" [class.charges]=\"order.additionalCharges.tax\">\r\n                + {{ order.additionalCharges.serviceCharges | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              Discount\r\n              <span class=\"badge\" [class.discount]=\"order.discount\">\r\n                - {{ order.discount | currency: 'INR'}}\r\n              </span>\r\n            </li>\r\n            <li class=\"list-group-item d-flex justify-content-between align-items-center total-price-item\">\r\n              Total\r\n              <span class=\"badge total-price\">\r\n                {{ order | orderPrice}}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row order-btn-wrapper\">\r\n        <div class=\"col col-sm-6\">\r\n          <button class=\"btn btn-primary btn-block\" (click)=\"initiatteOrder()\"> Order </button>\r\n          <p class=\"text-danger\" *ngIf=\"submitted && !areCustomerDetailsValid\">Fill customer details</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { of, Observable } from 'rxjs';\r\nimport { BURGERS, getBurgerByType } from '../../shared/data/burgers.data';\r\nimport { IBurger } from '../../shared/models/burger.model';\r\nimport { BurgerType } from '../../shared/config/burger.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BurgersService {\r\n\r\n  // query list of burgers\r\n  public query(): Observable<IBurger[]> {\r\n    // should make an API call\r\n\r\n    return of(BURGERS);\r\n\r\n  }\r\n\r\n  // get a burger by id\r\n  public get(burgerId: string) {\r\n\r\n  }\r\n\r\n  // save burger details\r\n  public post(payload: any) {\r\n\r\n  }\r\n\r\n  // update burger details\r\n  public put(id: string, payload: any) {\r\n\r\n  }\r\n\r\n  // delete burger details\r\n  public delete(id: string) {\r\n\r\n  }\r\n\r\n  public getBurgerByType(burgerType: BurgerType): IBurger {\r\n    return getBurgerByType(burgerType);\r\n  }\r\n\r\n\r\n}\r\n","export const ADDITIONAL_CHARGES = {\r\n  TAX: 2,\r\n  SERVIE_CHARGES: 1\r\n};\r\n\r\nexport const DISCOUNT = 1.5;\r\n","import { IBurger, Burger } from '../models/burger.model';\r\nimport { BurgerType, Ingredients, BurgerTitle } from '../config/burger.config';\r\nconst placehoderImg = 'assets/images/burger-placeholder.xs.png';\r\nconst burgerDesc = 'It’s seasoned with just a pinch of salt and pepper, sizzled on a flat iron grill, then topped with slivered onions, tangy pickles and two slices of melty cheese on a sesame seed bun.'\r\n\r\ninterface IBurgerDesc {\r\n  img: string;\r\n  description: string;\r\n  ingredients: {\r\n    [ingredientName: string]: number;\r\n  };\r\n}\r\n\r\nconst BURGERS_DESC: { [burgerType: string]: IBurgerDesc } = {\r\n  [BurgerType.CheeseBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Cheese]: 1\r\n    }\r\n  },\r\n  [BurgerType.CutletBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Cutlet]: 1\r\n    }\r\n  },\r\n  [BurgerType.SaladBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Salad]: 1\r\n    }\r\n  },\r\n  [BurgerType.ChlliBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Chilli]: 1\r\n    }\r\n  },\r\n  [BurgerType.PaneerBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Paneer]: 1\r\n    }\r\n  },\r\n  [BurgerType.MashroomBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1,\r\n      [Ingredients.Mashroom]: 1\r\n    }\r\n  },\r\n  [BurgerType.VanillaBurger]: {\r\n    img: placehoderImg,\r\n    description: burgerDesc ,\r\n    ingredients: {\r\n      [Ingredients.Bun]: 1\r\n    }\r\n  }\r\n};\r\n\r\nexport function getBurgerByType(type: BurgerType): IBurger {\r\n  const burger = new Burger();\r\n  const desc: IBurgerDesc = BURGERS_DESC[type];\r\n  Object.entries(desc.ingredients).forEach( ([name, value]) => {\r\n    burger.ingredients[name] = value;\r\n  } );\r\n  burger.type = type;\r\n  burger.title = BurgerTitle[type];\r\n  burger.description = desc.description;\r\n  burger.thumbnail = placehoderImg;\r\n  return burger;\r\n};\r\n\r\nexport const BURGERS: IBurger[] = Object.keys(BURGERS_DESC).map( (type) => {\r\n  return getBurgerByType(type as BurgerType);\r\n} );\r\n","import { Ingredients, BurgerType } from '../config/burger.config';\r\n\r\nexport interface IBurger {\r\n  name: string;\r\n  type: BurgerType;\r\n  ingredients: {\r\n    [Ingredients.Bun]: number;\r\n    [Ingredients.Salad]?: number;\r\n    [Ingredients.Cutlet]?: number;\r\n    [Ingredients.Cheese]?: number;\r\n    [Ingredients.Chilli]?: number;\r\n    [Ingredients.Paneer]?: number;\r\n    [Ingredients.Mashroom]?: number;\r\n  };\r\n  title?: string;\r\n  thumbnail?: string;\r\n  description?: string;\r\n}\r\n\r\nexport class Burger implements IBurger {\r\n  name = '';\r\n  type = BurgerType.CheeseBurger;\r\n  ingredients = { [Ingredients.Bun]: 1 };\r\n  title = '';\r\n  thumbnail = '';\r\n  description = '';\r\n}\r\n","import { IBurger, Burger } from './burger.model';\r\nimport { ADDITIONAL_CHARGES, DISCOUNT } from '../config/order.config';\r\n\r\nexport interface ICustomerDetails {\r\n  name: string;\r\n  phone: string;\r\n  email?: string;\r\n}\r\n\r\nexport class CustomerDetails implements ICustomerDetails {\r\n  name = '';\r\n  phone = '';\r\n}\r\n\r\nexport interface IAdditionalCharges {\r\n  tax?: number;\r\n  serviceCharges?: number;\r\n}\r\n\r\nexport interface IOrder {\r\n  burger: IBurger;\r\n  customer: ICustomerDetails;\r\n  id?: string;\r\n  time?: Date;\r\n  discount?: number;\r\n  additionalCharges?: IAdditionalCharges;\r\n}\r\n\r\nexport class Order implements IOrder {\r\n  burger = new Burger();\r\n  customer = new CustomerDetails();\r\n  discount = DISCOUNT;\r\n  additionalCharges = {\r\n    tax: ADDITIONAL_CHARGES.TAX,\r\n    serviceCharges: ADDITIONAL_CHARGES.SERVIE_CHARGES\r\n  };\r\n}\r\n"],"sourceRoot":"webpack:///"}